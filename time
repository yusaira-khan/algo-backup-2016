Imagine for a moment that you are competing in a college coding competition (it's a bit of a stretch, but bear with us). You are given a set of programming problems to solve, and you may solve any number of them in any order before a strict time limit runs out. Each problem has a score and an estimated time to complete.

Typically, you will receive no points for a problem unless it is completely solved. For simplicity, assume that completely solving a problem requires its entire estimated time. However, there is a twist: you may receive partial credit on at most one problem. The partial credit is given in proportion to how close your solution comes to the full, correct solution, which of course depends on how much time you spend working on it. For example, if a problem is worth 5 points and is estimated to take 30 minutes, then if you spend 15 minutes on it, you will receive 2.5 points for it.

Your goal is to write a program to select a subset of problems to solve, such that the total time you would spend solving the problems does not exceed the competition time limit. You should seek to accomplish the following goals in decreasing order of priority:

The total score of the subset should be as large as possible.
The subset should contain as many problems as possible.
It is preferred that your solution not contain a partial-credit problem. If you do solve a problem for partial credit, its score should be as low as possible.
Input description/format

An input file for this problem will contain no more than 50 lines.

The first line will contain an unsigned integer representing the total duration of the competition in minutes. The following lines will specify the programming problems. A problem specification is three integers separated by commas: problemID,score,durationInMinutes. It is noted that no two problems will have both the same score and duration in minutes.

Output description/format

An output file for this problem should contain two lines. The first line should show the total score you would receive for solving the problems you chose within the time limit. If the score is fractional, just round down to the nearest integer.

On the second line, list the ID's of the problems you chose to solve, separated by commas with no spaces, and sorted in increasing order. If you chose to solve one of the problems for partial credit, print an asterisk (*) after it in the list.

Example input

60
1,9,30
2,10,32
Example output

18
1*,2



time:
31
5,16,24,37